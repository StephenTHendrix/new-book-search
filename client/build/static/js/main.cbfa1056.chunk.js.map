{"version":3,"sources":["components/SearchForm/index.js","utils/API.js","components/BookResult/index.js","components/Results/index.js","pages/Search.js","pages/Saved.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js"],"names":["SearchForm","props","react_default","a","createElement","className","id","type","name","form","onChange","e","handleChange","placeholder","required","onClick","handleSearchClick","API","getBooks","axios","get","searchBooks","title","post","addBookToDB","bookData","deleteBook","delete","concat","BookResult","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSaveClick","setState","saved","authors","link","img","description","preventDefault","then","response","console","log","catch","err","state","deleted","bind","assertThisInitialized","handleDeleteClick","_this2","Router","dispatch","location","style","display","src","thumbnail","smallThumbnail","alt","join","href","target","rel","path","disabled","React","Component","ResultsContainer","map","book","bookInfo","volumeInfo","components_BookResult","canonicalVolumeLink","imageLinks","key","savedBooks","length","_id","Search","bookInput","value","data","components_SearchForm","Results","match","Saved","Nav","react_router_dom","to","process","REACT_APP_API_KEY","App","components_Nav","react_router","exact","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cbfa1056.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SearchForm(props) {\n    return (\n        <div className=\"container mt-5\" id=\"searchContainer\">\n            <form id=\"bookSearch\">\n                <p>Enter a Book or Author name to search:</p>\n                {/* <label className=\"mr-3\" htmlFor=\"bookInput\" form=\"bookSearch\">Enter a book to search:</label> */}\n                \n                <input className=\"mr-3\" type=\"text\" name=\"bookInput\" id=\"bookInput\" form=\"bookSearch\" onChange={(e) => props.handleChange(e)} placeholder=\"Book Title or Author\" required />\n            \n                <button className=\"mt-3\" id=\"btn-submit\" type=\"submit\" onClick={(e) => props.handleSearchClick(e)}>Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;","import axios from \"axios\";\n\nexport default {\n    getBooks: () => {\n        return axios.get(\"/api/books\");\n    },\n    searchBooks: (title) => {\n        return axios.post(\"/search\", { title: title });\n    },\n    addBookToDB: (bookData) => {\n        return axios.post(\"/api/books\", bookData);\n    },\n    deleteBook: (id) => {\n        return axios.delete(`/api/books/${id}`);\n    }\n}","import React from \"react\";\nimport API from \"../../utils/API\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass BookResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saved: false,\n            deleted: false\n        }\n        this.handleSaveClick = this.handleSaveClick.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    }\n\n    handleSaveClick = function (e) {\n        this.setState({ saved: true });\n        const bookData = {\n            title: this.props.title,\n            authors: this.props.authors,\n            link: this.props.link,\n            img: this.props.img,\n            description: this.props.description\n        }\n        e.preventDefault();\n        API.addBookToDB(bookData).then(\n            (response) => {\n                console.log(response);\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    handleDeleteClick(e) {\n        this.setState({ deleted: true });\n        e.preventDefault();\n        API.deleteBook(this.props.id).then(\n            (response) => {\n                console.log(response);\n                Router.dispatch(this.props.location, null)\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return (\n\n            <div className=\"bookResult card mb-3 container\"  id={(this.props.id) ? this.props.id : null} style={{ display: this.state.deleted ? \"none\" : \"block\" }}>\n                <div className=\"row no-gutters\">\n                    <div className=\"col-md-4 p-0 text-center\">\n                        {(this.props.img) ? <img className=\"img-fluid img-result\" src={\n                            // if smallthubmail exists on this.props.img use that else if thumbnail exists on this.props.img use that else leave src empty\n                            (this.props.img.thumbnail) ? this.props.img.thumbnail :\n                                (this.props.img.smallThumbnail) ? this.props.img.smallThumbnail : \"\"\n                        } alt=\"book cover\" /> : null}\n                    </div>\n                    <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h3 className=\"card-title\">{this.props.title}</h3>\n                        <p className=\"card-text\">{(this.props.description) ? this.props.description : \"N/A\"}</p>\n                        <p className=\"card-text\"><small className=\"text-muted\">by:  {(this.props.authors) ? this.props.authors.join(\", \") : \"N/A\"}</small></p>\n                        <div className=\"btnDiv\">\n                        {\n                            // if link to book exists include View button else do not\n                            (this.props.link) ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><button type=\"button\" name=\"view\">View</button></a> : null\n                        }\n                        {\n                            // if this.props.path is \"/\" display save button else display Delete button\n                            (this.props.path === \"/\") ? <button type=\"button\" name=\"save\" onClick={this.handleSaveClick} disabled={this.state.saved}>{(this.state.saved) ? \"Saved\" : \"Save\"}</button> : <button type=\"button\" name=\"Delete\" onClick={this.handleDeleteClick} disabled={this.state.deleted}>Delete</button>\n                        }\n                    </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookResult;","import React from \"react\";\nimport BookResult from \"../BookResult\";\n\nfunction ResultsContainer(props) {\n    if (props.path === \"/\") {\n        return (\n            <div className=\"container mt-3\" id=\"resultsContainer\">\n                <h3>Results Found</h3>\n                {props.bookData.map((book) => {\n                    const bookInfo = book.volumeInfo;\n                    return <BookResult\n                        title={bookInfo.title}\n                        authors={bookInfo.authors}\n                        description={bookInfo.description}\n                        link={bookInfo.canonicalVolumeLink}\n                        img={bookInfo.imageLinks}\n                        path={props.path}\n                        key={book.id} />\n                })}\n            </div>\n        );\n    } else if (props.path === \"/saved\") {\n        if (props.savedBooks.length > 0) {\n            return (\n              <div className=\"container mt-3\" id=\"resultsContainer\">\n                <h3>Saved Books</h3>\n                {props.savedBooks.map(book => {\n                  return (\n                    <BookResult\n                      title={book.title}\n                      authors={book.authors}\n                      description={book.description}\n                      link={book.link}\n                      img={book.img}\n                      id={book._id}\n                      path={props.path}\n                      key={book._id}\n                    />\n                  );\n                })}\n              </div>\n            );\n        } else {\n            return (\n              <div className=\"container mt-3\" id=\"resultsContainer\">\n                <h3>Saved Books</h3>\n                <p>No saved books.</p>\n              </div>\n            );\n        }\n    }\n}\n\nexport default ResultsContainer;","import React from \"react\";\nimport SearchForm from \"../components/SearchForm\";\nimport ResultsContainer from \"../components/Results\";\nimport API from \"../utils/API\";\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookInput: \"\",\n            bookData: []\n        }\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({ bookInput: e.target.value })\n    }\n\n    handleSearchClick(e) {\n        e.preventDefault();\n        API.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    this.setState({ bookData: response.data });\n                    this.setState({ bookInput: \"\" });\n                }\n            );\n    }\n\n    render() {\n        return (\n            <main>\n                <SearchForm handleChange={this.handleChange} handleSearchClick={this.handleSearchClick} />\n                {(this.state.bookData.length > 0) ?\n                    <ResultsContainer bookData={this.state.bookData} path={this.props.match.path} /> : null\n                }\n            </main>\n        );\n    }\n}\n\nexport default Search;","import React from \"react\";\nimport ResultsContainer from \"../components/Results\";\nimport API from \"../utils/API\";\n\nclass Saved extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            savedBooks: []\n        }\n    }\n\n    componentDidMount() {\n        API.getBooks().then(\n            (response) => {\n                this.setState({ savedBooks: response.data });\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        console.log(this.state.savedBooks);\n        return (\n            <main>\n                <ResultsContainer savedBooks={this.state.savedBooks} path={this.props.match.path} />\n            </main>\n        );\n    }\n}\n\nexport default Saved;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n    return (\n      <nav className=\"p-0\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <p className=\" my-2\">powered by Google Books</p>\n          </div>\n          <div className=\"row\">\n            <h1 className=\"my-5\">Book Search</h1>\n          </div>\n          <div className=\"row\">\n            <Link className=\"btn-nav mt-3 mb-3 text-center\" to=\"/\">\n              Search\n            </Link>\n            <Link className=\"btn-nav mt-3 ml-3 mb-3 text-center\" to=\"/saved\">\n              Saved\n            </Link>\n          </div>\n          <div className=\"row\"></div>\n        </div>\n      </nav>\n    );\n}\n\nexport default Nav;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav\";\n\nconsole.log(process.env.REACT_APP_API_KEY);\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Search} />\n            <Route path=\"/saved\" component={Saved} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}